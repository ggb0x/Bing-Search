const { chromium, devices } = require('playwright')

module.exports = function (RED) {
	function NodeOpenBrowser(conf) {
		RED.nodes.createNode(this, conf)

		let node = this
		let storage = {}

		node.on('input', async (message, send, done) => {
			const msg = message
			node.status({ fill: 'blue', shape: 'ring', text: 'opening browser' })
			try {
				msg.browser = await chromium.launch()

				if (!msg.storage) {
					storage = JSON.parse(conf.storage)
				} else {
					storage = msg.storage
				}

				msg.context = await msg.browser.newContext({
					storageState: storage,
					...devices['Desktop Chrome'],
				})
				msg.page = await msg.context.newPage()

				try {
					await msg.page.goto(conf.webURL)

					if (conf.isVisible) {
						await msg.page.isVisible(conf.isVisible)
					}

					await msg.page.waitForTimeout(conf.timeout)

					send(msg)
					node.status({ fill: 'green', shape: 'dot', text: 'success' })
					done()
				} catch (e) {
					node.error("Can't navitage to " + webURL)
					node.status({ fill: 'yellow', shape: 'dot', text: 'navigate error' })
					done(e)
				}
			} catch (e) {
				msg.browser = null
				node.error("Can't open browser instance!")
				node.status({ fill: 'red', shape: 'ring', text: 'launch error' })
				done(e)
			}
		})
	}

	RED.nodes.registerType('open-browser', NodeOpenBrowser)
}
