module.exports = function (RED) {
	function NodeWaitforFrameBrowser(conf) {
		RED.nodes.createNode(this, conf)

		let node = this

		node.on('input', async (message, send, done) => {
			// Cheat to allow correct typing in typescript
			const msg = message

			if (!msg.context || !msg.browser) {
				node.error('Browser instance not found!')
				node.status({ fill: 'yellow', shape: 'dot', text: 'instance not found' })
				done()
			}

			if (!msg.frameLocator) {
				node.error('Frame locator instance not found!')
				node.status({ fill: 'yellow', shape: 'dot', text: 'instance not found' })
				done()
			}

			try {
				await msg.frameLocator.waitFor()

				node.status({ fill: 'green', shape: 'dot', text: 'success' })

				send(msg)
				done()
			} catch (e) {
				msg.browser = null
				msg.context = null
				node.error('Error wait for frame')
				node.status({ fill: 'red', shape: 'ring', text: 'wait for frame error' })
				done(e)
			}
		})
	}

	RED.nodes.registerType('waitfor-frame-browser', NodeWaitforFrameBrowser)
}
